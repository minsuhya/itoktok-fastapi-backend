user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
    use epoll;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    upstream api { # api는 arbitrary.
      server std-api:3000; # docker-compose.yml에서 올라가는 컨테이너명으로 작성.
      keepalive 1024;
    }

    server {
      listen 80 default_server; # nginx를 통해 외부로 노출되는 port.
      server_name api.itoktok.com;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;

      location / {
        proxy_pass  http://api; # arbitrary한 upstream명
      }
    }

    server {
      listen 80; # nginx를 통해 외부로 노출되는 port.
      server_name www.itoktok.com;

      location / {
        root /var/www/html;
        index index.html index.htm;

        # arguments
        try_files $uri $uri/ /index.html?$args;
      }
    }
    # include /etc/nginx/conf.d/*.conf;
}
